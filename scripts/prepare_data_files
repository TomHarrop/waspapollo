#!/usr/bin/env bash

PERL="/usr/bin/perl"

FASTA="dataraw/scaffolds_sorted.fasta" 
GFF="dataraw/waspass.all.vvul.gff"

outdir="data/sorted"
if [[ ! -e "${outdir}" ]]; then
  mkdir -p "${outdir}"
fi

blatdir="blat"
if [[ ! -e "${blatdir}" ]]; then
  mkdir -p "${blatdir}"
fi

# prepare refseqs
printf "[ %s: Running prepare-refseqs.pl ]\n" "$(date)"
"${PERL}" bin/apollo/prepare-refseqs.pl \
    --fasta "${FASTA}" \
    --out "${outdir}"

# load MAKER gff
printf "[ %s: Running flatfile-to-json.pl ]\n" "$(date)"
"${PERL}" bin/apollo/flatfile-to-json.pl \
    --gff "${GFF}" \
    --arrowheadClass trellis-arrowhead \
    --subfeatureClasses '{"CDS":"green",
                          "contig":"grey",
                          "exon":"lightblue",
                          "gene":"blue",
                          "match":"grey",
                          "match_part":"grey",
                          "mRNA":"lightblue",
                          "five_prime_UTR":"darkgreen",
                          "three_prime_UTR":"darkgreen"}' \
    --type mRNA \
    --trackLabel maker \
    --out "${outdir}"

# load exonerate GFF
"${PERL}" bin/apollo/flatfile-to-json.pl \
    --gff dataraw/test_exonerate.gff \
    # --arrowheadClass trellis-arrowhead \
    # --subfeatureClasses '{"gene":"blue",
    #                       "cds":"green",
    #                       "exon":"lightblue",
    #                       "similarity":"grey"}' \
    # --type gene,cds,exon,similarity \
    --type nucleotide_to_protein_match \
    --trackLabel "Amel_4.5_proteins_exonerate" \
    --out "${outdir}"

# generate index
printf "[ %s: Running generate-names.pl ]\n" "$(date)"
"${PERL}" bin/apollo/generate-names.pl \
    --verbose \
    --out "${outdir}"

# make a blat database
printf "[ %s: Running faToTwoBit ]\n" "$(date)"
/usr/local/bin/faToTwoBit "${FASTA}" "${blatdir}/vv.2bit"

# make the whole data and blat directories accessible to everyone so that
# tomcat can read it
chmod -R a=rwx "${outdir}"
chmod -R a=rwx "${blatdir}"

exit 0
