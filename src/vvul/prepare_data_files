#!/usr/bin/env bash

set -eu

PERL="/usr/bin/perl"

FASTA="processed_data/vvul/scaffolds_renamed.fasta" 
GFF="processed_data/vvul/maker_filtered.gff3"

outdir="apollo_data/vvul"
if [[ ! -e "${outdir}" ]]; then
  mkdir -p "${outdir}"
fi

blatdir="${outdir}/blat"
if [[ ! -e "${blatdir}" ]]; then
  mkdir -p "${blatdir}"
fi

# prepare refseqs
printf "[ %s: Running prepare-refseqs.pl ]\n" "$(date)"
"${PERL}" bin/apollo/prepare-refseqs.pl \
    --fasta "${FASTA}" \
    --out "${outdir}"

# load MAKER gff
printf "[ %s: Running flatfile-to-json.pl on maker annotation ]\n" "$(date)"
"${PERL}" bin/apollo/flatfile-to-json.pl \
    --gff "${GFF}" \
    --type "mRNA" \
    --trackLabel "maker" \
    --key "MAKER genome annotation" \
    --out "${outdir}" 

# load tblastn GFFs
printf "[ %s: Running flatfile-to-json.pl on tblastn results ]\n" "$(date)"
"${PERL}" bin/apollo/flatfile-to-json.pl \
    --gff processed_data/vvul/tblastn/amel_OGSv3.2_pep_hits.gff3 \
    --type "match,similarity" \
    --trackType "CanvasFeatures" \
    --trackLabel "amel_OGSv3.2_pep_tblastn" \
    --key "Apis mellifera v3.2 peptides tblastn" \
    --out "${outdir}"

"${PERL}" bin/apollo/flatfile-to-json.pl \
    --gff processed_data/vvul/tblastn/Pdom_r1.2_protein_hits.gff3 \
    --type "match,similarity" \
    --trackType "CanvasFeatures" \
    --trackLabel "Pdom_r1.2_protein_tblastn" \
    --key "Polistes dominula r1.2 proteins tblastn" \
    --out "${outdir}"

# load STAR bamfile(s)
"${PERL}" bin/apollo/add-bam-track.pl \
    --bam_url "processed_data/vvul/rnaseq/merged/worker_merged.bam" \
    --label "worker" --key "Worker RNAseq reads" \
    --in "${outdir}/trackList.json"

"${PERL}" bin/apollo/add-bam-track.pl \
    --bam_url  "processed_data/vvul/rnaseq/merged/larva_merged.bam" \
    --label "larva" --key "Larva RNAseq reads" \
    --in "${outdir}/trackList.json"

"${PERL}" bin/apollo/add-bam-track.pl \
    --bam_url "processed_data/vvul/rnaseq/merged/queen_merged.bam" \
    --label "queen" --key "Queen RNAseq reads" \
    --in "${outdir}/trackList.json"

# generate index
printf "[ %s: Running generate-names.pl ]\n" "$(date)"
"${PERL}" bin/apollo/generate-names.pl \
    --verbose \
    --out "${outdir}"

# make a blat database
printf "[ %s: Running faToTwoBit ]\n" "$(date)"
/usr/local/bin/faToTwoBit "${FASTA}" "${blatdir}/vvul.2bit"

# copy stranded RNAseq css to data directory
if [[ ! -d "${outdir}/css/" ]]; then
    mkdir "${outdir}/css/"
fi
cp raw_data/vvul/rnaseq/stranded_rnaseq.css "${outdir}/css/"

# make the whole data and rnaseq directories accessible to everyone so that
# tomcat can read it
chmod -R a=rwx "${outdir}"
chmod -R a=rwx "processed_data/vvul/rnaseq/merged"

exit 0
