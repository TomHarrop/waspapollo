#!/usr/bin/env bash

set -eu

downloaded_annotations="apollo_annotations/apollo_annotations.gff3"
filtered_annotations="apollo_annotations/apollo_annotations_filtered.gff3"

# PERL5LIB required by add_features perl script
if [[ -v PERL5LIB ]]; then
    export PERL5LIB="${PERL5LIB}:bin/jbrowse_libs"
else
    export PERL5LIB="bin/jbrowse_libs"
fi

# use environment variables for apollo url and username
if [[ ! -v APOLLO_URL ]]; then
    printf "Set environment variable APOLLO_URL\n"
    exit 1
fi
if [[ ! -v APOLLO_USERNAME ]]; then
    printf "Set environment varidir bable APOLLO_USERNAME\n"
    exit 1
fi
if [[ ! -v APOLLO_PASSWORD ]]; then
    printf "Set environment variable APOLLO_PASSWORD\n"
    exit 1
fi

# delete existing annotations from test organism
curl_path="${APOLLO_URL}/organism/deleteOrganismFeatures"
curl "${curl_path}" \
    -H 'Content-Type: application/json' \
    --data "{\"username\":\"${APOLLO_USERNAME}\", \"password\":\"${APOLLO_PASSWORD}\", \"organism\":\"Test organism\" }" ;

curl "${curl_path}" \
    -H 'Content-Type: application/json' \
    --data "{\"username\":\"${APOLLO_USERNAME}\", \"password\":\"${APOLLO_PASSWORD}\", \"organism\":\"Vespula vulgaris\" }" ;


# remove failing entries from GFF
# (r script src/utils/split_problematic_gff_entries.R)
# RUN INTERACTIVELY TO CATCH ALL IDs

# upload cleaned annotations
bin/apollo_source/tools/data/add_features_from_gff3_to_annotations.pl \
    --url "${APOLLO_URL}" \
    --username "${APOLLO_USERNAME}" \
    --password "${APOLLO_PASSWORD}" \
    --input "${filtered_annotations}" \
    --use_name_for_feature \
    --organism "Vespula vulgaris" \
    --success_log "apollo_annotations/success.log" \
    --error_log "apollo_annotations/errors.log"

